@page "/guns/"
@page "/guns/{SearchQuery}"
@inject HttpClient Http

@using System.Net

<PageTitle>Gungeon Guns</PageTitle>

<h1>Guns from Enter the Gungeon</h1>

<p>Displays all gun stats from Enter the Gungeon</p>
<Search />

@if (_guns == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="grid">
		@foreach (var gun in _guns) {
			<GunCard Gun="gun"></GunCard>
		}
    </div>
}

@code {
    private IEnumerable<Gun>? _all_guns;
    private IEnumerable<Gun>? _guns;
    [Parameter]
    public string? SearchQuery { get; set; }
    private string? _cachedSearchQuery;

    protected override async Task OnInitializedAsync()
    {
        _all_guns = await Http.GetFromJsonAsync<Gun[]>("sample-data/stuff_labelled.json");
        updateResults("");
    }

    protected override async Task OnParametersSetAsync()
    { 
        if (_cachedSearchQuery != SearchQuery) 
        {
            // parameter changed 
            _cachedSearchQuery = SearchQuery;
            updateResults(_cachedSearchQuery);
        }
    }

    private void updateResults(string searchQuery)
    {
        if (searchQuery == "" || searchQuery == null) 
        {
            _guns = _all_guns;
            return;
        }
        _guns = _all_guns.Where(x => x.Name!.Contains(searchQuery, StringComparison.CurrentCultureIgnoreCase));
    }
}
