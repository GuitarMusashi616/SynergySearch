@page "/synergies/"
@page "/synergies/{SearchQuery}"
@inject HttpClient Http

@using System.Net

<PageTitle>Gungeon Synergies</PageTitle>

<h1>Synergies from Enter the Gungeon</h1>

<p>Displays all gun synergies from Enter the Gungeon</p>
<Search Route="synergies"/>

@if (_synergies == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="grid">
		@foreach (var synergy in _synergies) {
			<SynergyCard Synergy="synergy"></SynergyCard>
		}
    </div>
}

@code {
    private IEnumerable<Synergy>? _all_synergies;
    private IEnumerable<Synergy>? _synergies;
    [Parameter]
    public string? SearchQuery { get; set; }
    private string? _cachedSearchQuery;

    protected override async Task OnInitializedAsync()
    {
        _all_synergies = await Http.GetFromJsonAsync<Synergy[]>("sample-data/stuff_labelled.json");
        updateResults("");
    }

    protected override async Task OnParametersSetAsync()
    { 
        if (_cachedSearchQuery != SearchQuery) 
        {
            // parameter changed 
            _cachedSearchQuery = SearchQuery;
            updateResults(_cachedSearchQuery);
        }
    }

    private void updateResults(string searchQuery)
    {
        if (searchQuery == "" || searchQuery == null) 
        {
            _synergies = _all_synergies;
            return;
        }
        _synergies = _all_synergies.Where(x => x.Name!.Contains(searchQuery, StringComparison.CurrentCultureIgnoreCase));
    }
}

